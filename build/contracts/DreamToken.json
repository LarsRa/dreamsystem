{
  "contractName": "DreamToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governmentAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxRate",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_taxRate",
          "type": "uint8"
        }
      ],
      "name": "setTaxRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_taxPoolAddress",
          "type": "address"
        }
      ],
      "name": "setTaxPoolAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_govAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governmentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taxPoolAddress\",\"type\":\"address\"}],\"name\":\"setTaxPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_taxRate\",\"type\":\"uint8\"}],\"name\":\"setTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Lars Raschke\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"_govAddress\":\"The address of government contract\",\"initialSupply\":\"The number of initial supplied tokens\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTaxPoolAddress(address)\":{\"params\":{\"_taxPoolAddress\":\"The address of the tax pool.\"}},\"setTaxRate(uint8)\":{\"params\":{\"_taxRate\":\"The tax rate applied to every transfer.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The total number of tokens to be transfered\",\"recipient\":\"The address of the token receiver\"},\"returns\":{\"_0\":\"bool for successful transfer\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Dream token for Dream Government\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Minting initial supply to senders address\"},\"setTaxPoolAddress(address)\":{\"notice\":\"Setting the tax pool address by government.\"},\"setTaxRate(uint8)\":{\"notice\":\"Setting the current tax fee by government.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfering tokens from sender to receiver and collecting taxes\"}},\"notice\":\"This ERC20 token is collecting fees on simple transfers related to voted government laws. The fees are send to the tax pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/larsr/Documents/fh/Bewerbung/DreamGov/contracts/DreamToken.sol\":\"DreamToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/larsr/Documents/fh/Bewerbung/DreamGov/contracts/DreamToken.sol\":{\"keccak256\":\"0x1ed5f286a1dca596eb9286891f30c1cfe4563c5af25e110bf3ed302338dcb2a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1a10c41f102395e24f88c04bce5b301cf707a3d3f5ccfb516c649abf760b6cc\",\"dweb:/ipfs/QmdXH754sCeTWtTB8e1oZPSQnbyY33EaeFAgZKTfBf8PEV\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200135e3803806200135e83398101604081905262000034916200033a565b6040518060400160405280600a81526020017f447265616d546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f44525400000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000b892919062000294565b508051620000ce90600490602084019062000294565b5050506000620000ec62000172640100000000026401000000009004565b60058054600160a060020a031916600160a060020a038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060068054600160a060020a031916600160a060020a0383161790556200016a338364010000000062000176810204565b50506200040f565b3390565b600160a060020a038216620001eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b62000202600083836401000000006200028f810204565b806002600082825462000216919062000379565b9091555050600160a060020a038216600090815260208190526040812080548392906200024590849062000379565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b828054620002a290620003b9565b90600052602060002090601f016020900481019282620002c6576000855562000311565b82601f10620002e157805160ff191683800117855562000311565b8280016001018555821562000311579182015b8281111562000311578251825591602001919060010190620002f4565b506200031f92915062000323565b5090565b5b808211156200031f576000815560010162000324565b600080604083850312156200034e57600080fd5b82516020840151909250600160a060020a03811681146200036e57600080fd5b809150509250929050565b60008219821115620003b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b600281046001821680620003ce57607f821691505b6020821081141562000409577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b610f3f806200041f6000396000f3fe608060405234801561001057600080fd5b506004361061013e576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100ca578063a9059cbb1161008e578063a9059cbb1461028f578063d570ab34146102a2578063dd62ed3e146102b5578063f2fde38b146102ee578063f985b3cf1461030157600080fd5b8063715018a614610222578063771a3a1d1461022a5780638da5cb5b1461024f57806395d89b4114610274578063a457c2d71461027c57600080fd5b8063313ce56711610111578063313ce567146101a957806332af04ff146101be57806339509351146101d35780636c791e04146101e657806370a08231146101f957600080fd5b806306fdde0314610143578063095ea7b31461016157806318160ddd1461018457806323b872dd14610196575b600080fd5b61014b610314565b6040516101589190610d73565b60405180910390f35b61017461016f366004610d26565b6103a6565b6040519015158152602001610158565b6002545b604051908152602001610158565b6101746101a4366004610cea565b6103bc565b60125b60405160ff9091168152602001610158565b6101d16101cc366004610c9c565b61048a565b005b6101746101e1366004610d26565b6104e6565b6101d16101f4366004610d50565b61051d565b610188610207366004610c9c565b600160a060020a031660009081526020819052604090205490565b6101d16105e2565b6007546101ac9074010000000000000000000000000000000000000000900460ff1681565b600554600160a060020a03165b604051600160a060020a039091168152602001610158565b61014b610666565b61017461028a366004610d26565b610675565b61017461029d366004610d26565b61072b565b60065461025c90600160a060020a031681565b6101886102c3366004610cb7565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6101d16102fc366004610c9c565b610760565b60075461025c90600160a060020a031681565b60606003805461032390610e86565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90610e86565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505050905090565b60006103b3338484610875565b50600192915050565b60006103c98484846109d3565b600160a060020a03841660009081526001602090815260408083203384529091529020548281101561046b5760405160e560020a62461bcd02815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61047f853361047a8685610e6f565b610875565b506001949350505050565b600554600160a060020a031633146104b75760405160e560020a62461bcd02815260040161046290610dc8565b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103b391859061047a908690610dfd565b600654600160a060020a031633146105a05760405160e560020a62461bcd02815260206004820152602760248201527f4f6e6c7920676f7665726e6d656e742063616e2063616c6c207468697320667560448201527f6e6374696f6e2e000000000000000000000000000000000000000000000000006064820152608401610462565b6007805460ff909216740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b600554600160a060020a0316331461060f5760405160e560020a62461bcd02815260040161046290610dc8565b600554604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805473ffffffffffffffffffffffffffffffffffffffff19169055565b60606004805461032390610e86565b336000908152600160209081526040808320600160a060020a0386168452909152812054828110156107125760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610462565b610721338561047a8685610e6f565b5060019392505050565b600080600061073984610bfd565b915091506107483386836109d3565b60075461047f903390600160a060020a0316846109d3565b600554600160a060020a0316331461078d5760405160e560020a62461bcd02815260040161046290610dc8565b600160a060020a03811661080c5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610462565b600554604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0383166108f35760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610462565b600160a060020a0382166109725760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610462565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a038316610a525760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610462565b600160a060020a038216610ad15760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610462565b600160a060020a03831660009081526020819052604090205481811015610b635760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610462565b610b6d8282610e6f565b600160a060020a038086166000908152602081905260408082209390935590851681529081208054849290610ba3908490610dfd565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bef91815260200190565b60405180910390a350505050565b60075460009081908190610c3b9061271090610c3590879074010000000000000000000000000000000000000000900460ff16610c55565b90610c68565b90506000610c498583610c74565b91959194509092505050565b6000610c618284610e50565b9392505050565b6000610c618284610e15565b6000610c618284610e6f565b8035600160a060020a0381168114610c9757600080fd5b919050565b600060208284031215610cae57600080fd5b610c6182610c80565b60008060408385031215610cca57600080fd5b610cd383610c80565b9150610ce160208401610c80565b90509250929050565b600080600060608486031215610cff57600080fd5b610d0884610c80565b9250610d1660208501610c80565b9150604084013590509250925092565b60008060408385031215610d3957600080fd5b610d4283610c80565b946020939093013593505050565b600060208284031215610d6257600080fd5b813560ff81168114610c6157600080fd5b600060208083528351808285015260005b81811015610da057858101830151858201604001528201610d84565b81811115610db2576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610e1057610e10610eda565b500190565b600082610e4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000816000190483118215151615610e6a57610e6a610eda565b500290565b600082821015610e8157610e81610eda565b500390565b600281046001821680610e9a57607f821691505b60208210811415610ed4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122004c896056e9a34693ddc9df1b206b49796c2764ee25089c02a87b29400ab392a64736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061013e576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100ca578063a9059cbb1161008e578063a9059cbb1461028f578063d570ab34146102a2578063dd62ed3e146102b5578063f2fde38b146102ee578063f985b3cf1461030157600080fd5b8063715018a614610222578063771a3a1d1461022a5780638da5cb5b1461024f57806395d89b4114610274578063a457c2d71461027c57600080fd5b8063313ce56711610111578063313ce567146101a957806332af04ff146101be57806339509351146101d35780636c791e04146101e657806370a08231146101f957600080fd5b806306fdde0314610143578063095ea7b31461016157806318160ddd1461018457806323b872dd14610196575b600080fd5b61014b610314565b6040516101589190610d73565b60405180910390f35b61017461016f366004610d26565b6103a6565b6040519015158152602001610158565b6002545b604051908152602001610158565b6101746101a4366004610cea565b6103bc565b60125b60405160ff9091168152602001610158565b6101d16101cc366004610c9c565b61048a565b005b6101746101e1366004610d26565b6104e6565b6101d16101f4366004610d50565b61051d565b610188610207366004610c9c565b600160a060020a031660009081526020819052604090205490565b6101d16105e2565b6007546101ac9074010000000000000000000000000000000000000000900460ff1681565b600554600160a060020a03165b604051600160a060020a039091168152602001610158565b61014b610666565b61017461028a366004610d26565b610675565b61017461029d366004610d26565b61072b565b60065461025c90600160a060020a031681565b6101886102c3366004610cb7565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6101d16102fc366004610c9c565b610760565b60075461025c90600160a060020a031681565b60606003805461032390610e86565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90610e86565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505050905090565b60006103b3338484610875565b50600192915050565b60006103c98484846109d3565b600160a060020a03841660009081526001602090815260408083203384529091529020548281101561046b5760405160e560020a62461bcd02815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61047f853361047a8685610e6f565b610875565b506001949350505050565b600554600160a060020a031633146104b75760405160e560020a62461bcd02815260040161046290610dc8565b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103b391859061047a908690610dfd565b600654600160a060020a031633146105a05760405160e560020a62461bcd02815260206004820152602760248201527f4f6e6c7920676f7665726e6d656e742063616e2063616c6c207468697320667560448201527f6e6374696f6e2e000000000000000000000000000000000000000000000000006064820152608401610462565b6007805460ff909216740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b600554600160a060020a0316331461060f5760405160e560020a62461bcd02815260040161046290610dc8565b600554604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805473ffffffffffffffffffffffffffffffffffffffff19169055565b60606004805461032390610e86565b336000908152600160209081526040808320600160a060020a0386168452909152812054828110156107125760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610462565b610721338561047a8685610e6f565b5060019392505050565b600080600061073984610bfd565b915091506107483386836109d3565b60075461047f903390600160a060020a0316846109d3565b600554600160a060020a0316331461078d5760405160e560020a62461bcd02815260040161046290610dc8565b600160a060020a03811661080c5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610462565b600554604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0383166108f35760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610462565b600160a060020a0382166109725760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610462565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a038316610a525760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610462565b600160a060020a038216610ad15760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610462565b600160a060020a03831660009081526020819052604090205481811015610b635760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610462565b610b6d8282610e6f565b600160a060020a038086166000908152602081905260408082209390935590851681529081208054849290610ba3908490610dfd565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bef91815260200190565b60405180910390a350505050565b60075460009081908190610c3b9061271090610c3590879074010000000000000000000000000000000000000000900460ff16610c55565b90610c68565b90506000610c498583610c74565b91959194509092505050565b6000610c618284610e50565b9392505050565b6000610c618284610e15565b6000610c618284610e6f565b8035600160a060020a0381168114610c9757600080fd5b919050565b600060208284031215610cae57600080fd5b610c6182610c80565b60008060408385031215610cca57600080fd5b610cd383610c80565b9150610ce160208401610c80565b90509250929050565b600080600060608486031215610cff57600080fd5b610d0884610c80565b9250610d1660208501610c80565b9150604084013590509250925092565b60008060408385031215610d3957600080fd5b610d4283610c80565b946020939093013593505050565b600060208284031215610d6257600080fd5b813560ff81168114610c6157600080fd5b600060208083528351808285015260005b81811015610da057858101830151858201604001528201610d84565b81811115610db2576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610e1057610e10610eda565b500190565b600082610e4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000816000190483118215151615610e6a57610e6a610eda565b500290565b600082821015610e8157610e81610eda565b500390565b600281046001821680610e9a57607f821691505b60208210811415610ed4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122004c896056e9a34693ddc9df1b206b49796c2764ee25089c02a87b29400ab392a64736f6c63430008050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1638:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "112:253:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "133:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "142:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "129:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "129:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "154:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "122:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "183:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "193:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "183:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "218:38:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "241:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "252:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "237:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:25:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "222:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "319:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "328:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "331:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "321:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "321:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "321:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "278:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "289:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "304:1:9",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "307:3:9",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "300:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "300:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "313:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "296:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "296:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "285:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "285:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "275:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "275:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "268:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "268:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "265:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "344:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "354:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "344:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:9",
                "type": ""
              }
            ],
            "src": "14:351:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "544:181:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "561:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "572:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "554:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "554:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "595:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "606:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "591:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "611:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "584:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "634:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "645:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "630:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "630:18:9"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "650:33:9",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "623:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:61:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "623:61:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "693:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "705:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "716:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "701:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "693:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "521:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "535:4:9",
                "type": ""
              }
            ],
            "src": "370:355:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "831:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "841:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "853:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "849:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "849:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "841:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "883:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "894:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "876:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "876:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "876:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "800:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "811:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "822:4:9",
                "type": ""
              }
            ],
            "src": "730:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "960:234:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "995:168:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1016:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1019:77:9",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1009:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1009:88:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1009:88:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1117:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1120:4:9",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1110:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1110:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1110:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1145:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1148:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1138:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1138:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1138:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "976:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "983:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "979:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "979:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "973:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "970:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1172:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1183:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1186:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1179:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1179:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1172:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "943:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "946:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "952:3:9",
                "type": ""
              }
            ],
            "src": "912:282:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1254:382:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1264:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1278:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1284:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1274:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1274:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1264:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1295:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1325:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1331:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1321:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1299:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1372:31:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1374:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1388:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1396:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1384:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1384:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1374:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1352:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1345:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1345:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1342:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1462:168:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1483:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1486:77:9",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1476:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1476:88:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1476:88:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1584:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1587:4:9",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1577:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1577:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1577:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1612:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1615:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1605:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1605:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1605:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1418:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1441:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1449:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1438:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1438:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1415:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1415:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1412:2:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1234:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1243:6:9",
                "type": ""
              }
            ],
            "src": "1199:437:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8292:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:9"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:9"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:9",
                "type": ""
              }
            ],
            "src": "14:196:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:116:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "340:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "343:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "356:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "385:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "366:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "356:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:9",
                "type": ""
              }
            ],
            "src": "215:186:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "493:173:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "539:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "548:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "551:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "541:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "541:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "541:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "514:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "523:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "510:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "510:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "535:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "506:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "506:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "503:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "564:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "574:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "574:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "564:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "612:48:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "645:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "656:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "622:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:38:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "451:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "462:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "474:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "482:6:9",
                "type": ""
              }
            ],
            "src": "406:260:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "775:224:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "821:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "830:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "833:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "823:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "823:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "823:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "796:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "805:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "792:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "792:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "817:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "788:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "785:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "846:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "875:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "856:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "846:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "894:48:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "927:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "938:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "923:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "904:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:38:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "894:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "951:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "978:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "989:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "974:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "974:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "961:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "961:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "725:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "736:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "748:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "756:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "764:6:9",
                "type": ""
              }
            ],
            "src": "671:328:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1091:167:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1137:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1146:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1149:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1139:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1139:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1139:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1112:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1121:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1108:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1108:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1133:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1104:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1101:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1162:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1191:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1172:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1162:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1210:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1237:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1248:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1233:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1233:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1220:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1210:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1049:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1060:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1072:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1080:6:9",
                "type": ""
              }
            ],
            "src": "1004:254:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1331:201:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1377:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1386:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1389:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1379:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1379:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1352:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1361:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1348:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1348:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1373:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1344:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1344:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1341:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1402:36:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1428:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1415:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1415:23:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1406:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1486:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1495:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1498:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1488:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1488:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1488:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1460:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1471:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1478:4:9",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1467:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1467:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1457:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1457:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1450:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1447:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1511:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1521:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1511:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1297:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1308:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1320:6:9",
                "type": ""
              }
            ],
            "src": "1263:269:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1638:125:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1648:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1660:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1671:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1656:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1656:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1648:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1690:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1705:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1713:42:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1701:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1701:55:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1683:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1683:74:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1683:74:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1607:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1618:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1629:4:9",
                "type": ""
              }
            ],
            "src": "1537:226:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1863:92:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1873:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1885:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1896:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1881:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1873:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1915:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1940:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1933:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1933:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1926:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1926:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1908:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1908:41:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1832:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1843:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1854:4:9",
                "type": ""
              }
            ],
            "src": "1768:187:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2081:476:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2091:12:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2101:2:9",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2095:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2119:9:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2130:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2112:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2112:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2142:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2162:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2156:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2156:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2146:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2189:9:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2200:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2185:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2185:18:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2205:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2178:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2178:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2178:34:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2221:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2230:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2225:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2290:90:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2319:9:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2330:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2315:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2315:17:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2334:2:9",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2311:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2311:26:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2353:6:9"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2361:1:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2349:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2349:14:9"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2365:2:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2345:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2345:23:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2339:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2339:30:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2304:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2304:66:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2304:66:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2251:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2254:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2248:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2248:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2262:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2264:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2273:1:9"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2276:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2269:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2269:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2264:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2244:3:9",
                    "statements": []
                  },
                  "src": "2240:140:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2414:66:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2443:9:9"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2454:6:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2439:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2439:22:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2463:2:9",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2435:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2435:31:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2468:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2428:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2428:42:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2428:42:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2395:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2398:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2392:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2392:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2389:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2489:62:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2505:9:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2524:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2532:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2520:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2520:15:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2541:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2537:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2537:7:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:29:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2501:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2501:45:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2548:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2497:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2497:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2489:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2050:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2061:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2072:4:9",
                "type": ""
              }
            ],
            "src": "1960:597:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2736:225:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2753:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2764:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2746:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2746:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2746:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2787:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2798:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2783:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2783:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2803:2:9",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2776:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2776:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2776:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2826:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2837:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2822:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2822:18:9"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2842:34:9",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2815:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2815:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2815:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2897:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2908:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2893:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2893:18:9"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2913:5:9",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2886:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2886:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2886:33:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2928:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2940:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2951:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2936:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2936:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2928:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2713:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2727:4:9",
                "type": ""
              }
            ],
            "src": "2562:399:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3140:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3157:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3168:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3150:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3150:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3150:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3191:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3202:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3187:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3187:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3207:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3180:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3180:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3230:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3226:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:18:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3246:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3219:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3301:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3312:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3297:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3297:18:9"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3317:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3290:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3290:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3335:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3347:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3358:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3343:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3335:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3117:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3131:4:9",
                "type": ""
              }
            ],
            "src": "2966:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3547:224:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3564:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3575:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3557:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3557:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3557:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3598:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3609:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3594:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3594:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3614:2:9",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3587:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3587:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3587:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3637:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3648:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3633:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3633:18:9"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3653:34:9",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3626:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3626:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3626:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3708:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3719:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3704:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3704:18:9"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3724:4:9",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3697:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3697:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3697:32:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3738:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3750:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3746:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3746:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3738:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3524:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3538:4:9",
                "type": ""
              }
            ],
            "src": "3373:398:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3950:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3967:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3978:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3960:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3960:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3960:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4001:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4012:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3997:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3997:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4017:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3990:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3990:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3990:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4040:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4051:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4036:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4036:18:9"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4056:34:9",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4029:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4029:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4029:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4111:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4122:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4107:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4107:18:9"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4127:8:9",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4100:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4100:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4100:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4145:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4157:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4168:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4153:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4153:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4145:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3927:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3941:4:9",
                "type": ""
              }
            ],
            "src": "3776:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4357:229:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4374:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4385:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4367:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4367:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4367:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4408:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4419:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4404:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4404:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4424:2:9",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4397:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4397:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4397:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4447:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4458:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4443:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4443:18:9"
                      },
                      {
                        "hexValue": "4f6e6c7920676f7665726e6d656e742063616e2063616c6c2074686973206675",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4463:34:9",
                        "type": "",
                        "value": "Only government can call this fu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4436:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4436:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4436:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4518:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4529:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4514:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4514:18:9"
                      },
                      {
                        "hexValue": "6e6374696f6e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4534:9:9",
                        "type": "",
                        "value": "nction."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4507:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4507:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4507:37:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4553:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4565:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4576:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4561:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4561:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4553:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_443fc3f7a485c900dc40ec61c2314e9fbdc931281d0c6ea7396e236a90ac7277__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4334:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4348:4:9",
                "type": ""
              }
            ],
            "src": "4183:403:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4765:230:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4782:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4793:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4775:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4775:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4775:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4816:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4827:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4812:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4812:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4832:2:9",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4805:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4805:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4805:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4855:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4866:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4851:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4851:18:9"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4871:34:9",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4844:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4844:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4844:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4926:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4937:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4922:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4922:18:9"
                      },
                      {
                        "hexValue": "6c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4942:10:9",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4915:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4915:38:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4915:38:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4962:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4974:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4985:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4970:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4970:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4962:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4742:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4756:4:9",
                "type": ""
              }
            ],
            "src": "4591:404:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5174:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5191:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5202:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5184:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5184:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5184:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5225:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5236:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5221:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5221:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5241:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5214:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5214:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5214:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5264:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5275:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5260:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5260:18:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5280:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5253:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5253:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5253:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5324:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5336:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5347:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5332:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5332:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5324:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5151:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5165:4:9",
                "type": ""
              }
            ],
            "src": "5000:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5535:227:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5552:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5563:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5545:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5545:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5545:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5586:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5597:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5582:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5582:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5602:2:9",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5575:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5575:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5575:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5625:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5636:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5621:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5621:18:9"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5641:34:9",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5614:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5614:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5614:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5696:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5707:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5692:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5692:18:9"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5712:7:9",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5685:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5685:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5685:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5729:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5741:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5752:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5737:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5737:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5729:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5512:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5526:4:9",
                "type": ""
              }
            ],
            "src": "5361:401:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5941:226:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5958:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5969:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5951:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5951:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5951:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5992:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6003:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5988:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5988:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6008:2:9",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5981:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5981:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5981:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6031:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6042:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6027:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6027:18:9"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6047:34:9",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6020:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6020:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6020:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6102:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6113:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6098:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6098:18:9"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6118:6:9",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6091:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6091:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6091:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6134:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6146:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6157:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6142:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6142:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6134:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5918:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5932:4:9",
                "type": ""
              }
            ],
            "src": "5767:400:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6346:227:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6363:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6374:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6356:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6356:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6356:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6397:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6408:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6393:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6393:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6413:2:9",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6386:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6386:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6386:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6436:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6447:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6432:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6432:18:9"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6452:34:9",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6425:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6425:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6425:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6507:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6518:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6503:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6503:18:9"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6523:7:9",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6496:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6496:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6496:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6540:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6552:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6563:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6548:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6540:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6323:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6337:4:9",
                "type": ""
              }
            ],
            "src": "6172:401:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6679:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6689:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6701:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6712:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6697:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6697:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6689:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6731:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6742:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6724:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6724:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6724:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6648:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6659:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6670:4:9",
                "type": ""
              }
            ],
            "src": "6578:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6857:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6867:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6879:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6890:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6875:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6875:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6867:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6909:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6924:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6932:4:9",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6920:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6920:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6902:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6902:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6902:36:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6826:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6837:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6848:4:9",
                "type": ""
              }
            ],
            "src": "6760:184:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6997:80:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7024:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7026:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7026:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7026:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7013:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7020:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7016:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7016:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7010:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7010:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7007:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7055:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7066:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7069:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7062:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7062:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7055:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6980:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6983:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6989:3:9",
                "type": ""
              }
            ],
            "src": "6949:128:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7128:228:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7159:168:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7180:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7183:77:9",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7173:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7173:88:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7173:88:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7281:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7284:4:9",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7274:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7274:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7274:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7309:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7312:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7302:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7302:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7302:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7148:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7141:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7141:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7138:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7336:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7345:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7348:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7341:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7341:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7336:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7113:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7116:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7122:1:9",
                "type": ""
              }
            ],
            "src": "7082:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7413:116:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7472:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7474:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7474:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7474:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7444:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7437:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7437:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7430:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7430:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7452:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7463:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7459:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7459:6:9"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7467:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7455:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7455:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7449:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7449:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7426:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7426:45:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7423:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7503:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7518:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7521:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7514:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7514:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7503:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7392:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7395:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7401:7:9",
                "type": ""
              }
            ],
            "src": "7361:168:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7583:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7605:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7607:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7607:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7607:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7599:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7602:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7596:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7596:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7593:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7636:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7648:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7651:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7644:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7644:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7636:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7565:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7568:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7574:4:9",
                "type": ""
              }
            ],
            "src": "7534:125:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7719:382:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7729:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7743:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7749:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7739:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7739:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7729:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7760:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7790:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7796:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7786:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7786:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7764:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7837:31:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7839:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7853:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7861:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7849:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7849:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7839:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7817:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7810:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7810:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7807:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7927:168:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7948:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7951:77:9",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7941:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7941:88:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7941:88:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8049:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8052:4:9",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8042:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8042:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8042:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8077:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8080:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8070:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8070:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8070:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7883:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7906:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7914:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7903:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7903:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7880:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7880:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7877:2:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7699:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7708:6:9",
                "type": ""
              }
            ],
            "src": "7664:437:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8138:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8155:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8158:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8148:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8148:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8148:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8252:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8255:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8245:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8245:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8245:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8276:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8279:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8269:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8269:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8269:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8106:184:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_443fc3f7a485c900dc40ec61c2314e9fbdc931281d0c6ea7396e236a90ac7277__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Only government can call this fu\")\n        mstore(add(headStart, 96), \"nction.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "445:2472:1:-:0;;;1155:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1898:114:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:5;1965;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1988:17:4;;;;:7;;:17;;;;;:::i;:::-;;1898:114;;867:17:3;887:12;:10;;;:12;;;:::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:3;-1:-1:-1;;;;;909:18:3;;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:3;-1:-1:-1;;942:43:3;;-1:-1:-1;;942:43:3;-1:-1:-1;1263:17:1::1;:31:::0;;-1:-1:-1;;;;;;1263:31:1::1;-1:-1:-1::0;;;;;1263:31:1;::::1;;::::0;;1305:32:::1;1311:10;1323:13:::0;1305:5:::1;;::::0;::::1;:32;:::i;:::-;1155:190:::0;;445:2472;;586:96:7;665:10;;586:96::o;8023:330:4:-;-1:-1:-1;;;;;8106:21:4;;8098:65;;;;;;;572:2:9;8098:65:4;;;554:21:9;611:2;591:18;;;584:30;650:33;630:18;;;623:61;701:18;;8098:65:4;;;;;;;;8174:49;8203:1;8207:7;8216:6;8174:20;;;;:49;:::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:4;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:4;;876:25:9;;;-1:-1:-1;;;;;8309:37:4;;;8326:1;;8309:37;;864:2:9;849:18;8309:37:4;;;;;;;8023:330;;:::o;10506:92::-;;;;:::o;445:2472:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;445:2472:1;;;-1:-1:-1;445:2472:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:351:9;93:6;101;154:2;142:9;133:7;129:23;125:32;122:2;;;170:1;167;160:12;122:2;193:16;;252:2;237:18;;231:25;193:16;;-1:-1:-1;;;;;;285:31:9;;275:42;;265:2;;331:1;328;321:12;265:2;354:5;344:15;;;112:253;;;;;:::o;912:282::-;952:3;983:1;979:6;976:1;973:13;970:2;;;1019:77;1016:1;1009:88;1120:4;1117:1;1110:15;1148:4;1145:1;1138:15;970:2;-1:-1:-1;1179:9:9;;960:234::o;1199:437::-;1284:1;1274:12;;1331:1;1321:12;;;1342:2;;1396:4;1388:6;1384:17;1374:27;;1342:2;1449;1441:6;1438:14;1418:18;1415:38;1412:2;;;1486:77;1483:1;1476:88;1587:4;1584:1;1577:15;1615:4;1612:1;1605:15;1412:2;;1254:382;;;:::o;:::-;445:2472:1;;;;;;",
  "deployedSourceMap": "445:2472:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;:::i;:::-;;:::i;:::-;;;1933:14:9;;1926:22;1908:41;;1896:2;1881:18;4174:166:4;1863:92:9;3165:106:4;3252:12;;3165:106;;;6724:25:9;;;6712:2;6697:18;3165:106:4;6679:76:9;4807:414:4;;;;;;:::i;:::-;;:::i;3014:91::-;3096:2;3014:91;;;6932:4:9;6920:17;;;6902:36;;6890:2;6875:18;3014:91:4;6857:87:9;2792:122:1;;;;;;:::i;:::-;;:::i;:::-;;5616:212:4;;;;;;:::i;:::-;;:::i;2565:97:1:-;;;;;;:::i;:::-;;:::i;3329:125:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3429:18:4;3403:7;3429:18;;;;;;;;;;;;3329:125;1700:145:3;;;:::i;651:20:1:-;;;;;;;;;;;;1068:85:3;1140:6;;-1:-1:-1;;;;;1140:6:3;1068:85;;;-1:-1:-1;;;;;1701:55:9;;;1683:74;;1671:2;1656:18;1068:85:3;1638:125:9;2288:102:4;;;:::i;6315:371::-;;;;;;:::i;:::-;;:::i;1607:343:1:-;;;;;;:::i;:::-;;:::i;525:32::-;;;;;-1:-1:-1;;;;;525:32:1;;;3887:149:4;;;;;;:::i;:::-;-1:-1:-1;;;;;4002:18:4;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149;1994:240:3;;;;;;:::i;:::-;;:::i;595:29:1:-;;;;;-1:-1:-1;;;;;595:29:1;;;2077:98:4;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;665:10:7;4296:7:4;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:4;4174:166;;;;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:4;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:7;5003:33:4;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;;;5046:79:4;;4793:2:9;5046:79:4;;;4775:21:9;4832:2;4812:18;;;4805:30;4871:34;4851:18;;;4844:62;4942:10;4922:18;;;4915:38;4970:19;;5046:79:4;;;;;;;;;5135:57;5144:6;665:10:7;5166:25:4;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;-1:-1:-1;5210:4:4;;4807:414;-1:-1:-1;;;;4807:414:4:o;2792:122:1:-;1140:6:3;;-1:-1:-1;;;;;1140:6:3;665:10:7;1280:23:3;1272:68;;;;-1:-1:-1;;;;;1272:68:3;;;;;;;:::i;:::-;2874:14:1::1;:32:::0;;-1:-1:-1;;2874:32:1::1;-1:-1:-1::0;;;;;2874:32:1;;;::::1;::::0;;;::::1;::::0;;2792:122::o;5616:212:4:-;665:10:7;5704:4:4;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:4;;;;;;;;;;5704:4;;5720:80;;5743:7;;5752:47;;5789:10;;5752:47;:::i;2565:97:1:-;853:17;;-1:-1:-1;;;;;853:17:1;839:10;:31;817:120;;;;-1:-1:-1;;;;;817:120:1;;4385:2:9;817:120:1;;;4367:21:9;4424:2;4404:18;;;4397:30;4463:34;4443:18;;;4436:62;4534:9;4514:18;;;4507:37;4561:19;;817:120:1;4357:229:9;817:120:1;2636:7:::1;:18:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;2636:18:1;;::::1;::::0;;;::::1;::::0;;2565:97::o;1700:145:3:-;1140:6;;-1:-1:-1;;;;;1140:6:3;665:10:7;1280:23:3;1272:68;;;;-1:-1:-1;;;;;1272:68:3;;;;;;;:::i;:::-;1790:6:::1;::::0;1769:40:::1;::::0;1806:1:::1;::::0;-1:-1:-1;;;;;1790:6:3::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1819:6;:19:::0;;-1:-1:-1;;1819:19:3::1;::::0;;1700:145::o;2288:102:4:-;2344:13;2376:7;2369:14;;;;;:::i;6315:371::-;665:10:7;6408:4:4;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:4;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;;;6495:85:4;;6374:2:9;6495:85:4;;;6356:21:9;6413:2;6393:18;;;6386:30;6452:34;6432:18;;;6425:62;6523:7;6503:18;;;6496:35;6548:19;;6495:85:4;6346:227:9;6495:85:4;6590:67;665:10:7;6613:7:4;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:4;;6315:371;-1:-1:-1;;;6315:371:4:o;1607:343:1:-;1729:4;1752:11;1765:15;1784:31;1808:6;1784:23;:31::i;:::-;1751:64;;;;1826:41;1836:10;1848:9;1859:7;1826:9;:41::i;:::-;1900:14;;1878:42;;1888:10;;-1:-1:-1;;;;;1900:14:1;1916:3;1878:9;:42::i;1994:240:3:-;1140:6;;-1:-1:-1;;;;;1140:6:3;665:10:7;1280:23:3;1272:68;;;;-1:-1:-1;;;;;1272:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:3;::::1;2074:73;;;::::0;-1:-1:-1;;;;;2074:73:3;;3168:2:9;2074:73:3::1;::::0;::::1;3150:21:9::0;3207:2;3187:18;;;3180:30;3246:34;3226:18;;;3219:62;3317:8;3297:18;;;3290:36;3343:19;;2074:73:3::1;3140:228:9::0;2074:73:3::1;2183:6;::::0;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:3;;::::1;::::0;2183:6:::1;::::0;2162:38:::1;::::0;2183:6:::1;::::0;2162:38:::1;2210:6;:17:::0;;-1:-1:-1;;2210:17:3::1;-1:-1:-1::0;;;;;2210:17:3;;;::::1;::::0;;;::::1;::::0;;1994:240::o;9579:340:4:-;-1:-1:-1;;;;;9680:19:4;;9672:68;;;;-1:-1:-1;;;;;9672:68:4;;5969:2:9;9672:68:4;;;5951:21:9;6008:2;5988:18;;;5981:30;6047:34;6027:18;;;6020:62;6118:6;6098:18;;;6091:34;6142:19;;9672:68:4;5941:226:9;9672:68:4;-1:-1:-1;;;;;9758:21:4;;9750:68;;;;-1:-1:-1;;;;;9750:68:4;;3575:2:9;9750:68:4;;;3557:21:9;3614:2;3594:18;;;3587:30;3653:34;3633:18;;;3626:62;3724:4;3704:18;;;3697:32;3746:19;;9750:68:4;3547:224:9;9750:68:4;-1:-1:-1;;;;;9829:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;6724:25:9;;;9880:32:4;;6697:18:9;9880:32:4;;;;;;;9579:340;;;:::o;7160:592::-;-1:-1:-1;;;;;7265:20:4;;7257:70;;;;-1:-1:-1;;;;;7257:70:4;;5563:2:9;7257:70:4;;;5545:21:9;5602:2;5582:18;;;5575:30;5641:34;5621:18;;;5614:62;5712:7;5692:18;;;5685:35;5737:19;;7257:70:4;5535:227:9;7257:70:4;-1:-1:-1;;;;;7345:23:4;;7337:71;;;;-1:-1:-1;;;;;7337:71:4;;2764:2:9;7337:71:4;;;2746:21:9;2803:2;2783:18;;;2776:30;2842:34;2822:18;;;2815:62;2913:5;2893:18;;;2886:33;2936:19;;7337:71:4;2736:225:9;7337:71:4;-1:-1:-1;;;;;7501:17:4;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;;;7528:74:4;;3978:2:9;7528:74:4;;;3960:21:9;4017:2;3997:18;;;3990:30;4056:34;4036:18;;;4029:62;4127:8;4107:18;;;4100:36;4153:19;;7528:74:4;3950:228:9;7528:74:4;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:4;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:4;7719:6;-1:-1:-1;;;;;7710:35:4;;7738:6;7710:35;;;;6724:25:9;;6712:2;6697:18;;6679:76;7710:35:4;;;;;;;;7247:505;7160:592;;;:::o;2155:277:1:-;2313:7;;2254;;;;;;2302:30;;2326:5;;2302:19;;:6;;2313:7;;;;;2302:10;:19::i;:::-;:23;;:30::i;:::-;2288:44;-1:-1:-1;2343:22:1;2368:15;:6;2288:44;2368:10;:15::i;:::-;2404:3;;2343:40;;-1:-1:-1;2155:277:1;;-1:-1:-1;;;2155:277:1:o;3382:96:8:-;3440:7;3466:5;3470:1;3466;:5;:::i;:::-;3459:12;3382:96;-1:-1:-1;;;3382:96:8:o;3767:::-;3825:7;3851:5;3855:1;3851;:5;:::i;3039:96::-;3097:7;3123:5;3127:1;3123;:5;:::i;14:196:9:-;82:20;;-1:-1:-1;;;;;131:54:9;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;343:1;340;333:12;295:2;366:29;385:9;366:29;:::i;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:2;;;551:1;548;541:12;503:2;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;493:173;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:2;;;833:1;830;823:12;785:2;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;775:224;;;;;:::o;1004:254::-;1072:6;1080;1133:2;1121:9;1112:7;1108:23;1104:32;1101:2;;;1149:1;1146;1139:12;1101:2;1172:29;1191:9;1172:29;:::i;:::-;1162:39;1248:2;1233:18;;;;1220:32;;-1:-1:-1;;;1091:167:9:o;1263:269::-;1320:6;1373:2;1361:9;1352:7;1348:23;1344:32;1341:2;;;1389:1;1386;1379:12;1341:2;1428:9;1415:23;1478:4;1471:5;1467:16;1460:5;1457:27;1447:2;;1498:1;1495;1488:12;1960:597;2072:4;2101:2;2130;2119:9;2112:21;2162:6;2156:13;2205:6;2200:2;2189:9;2185:18;2178:34;2230:1;2240:140;2254:6;2251:1;2248:13;2240:140;;;2349:14;;;2345:23;;2339:30;2315:17;;;2334:2;2311:26;2304:66;2269:10;;2240:140;;;2398:6;2395:1;2392:13;2389:2;;;2468:1;2463:2;2454:6;2443:9;2439:22;2435:31;2428:42;2389:2;-1:-1:-1;2541:2:9;2520:15;-1:-1:-1;;2516:29:9;2501:45;;;;2548:2;2497:54;;2081:476;-1:-1:-1;;;2081:476:9:o;5000:356::-;5202:2;5184:21;;;5221:18;;;5214:30;5280:34;5275:2;5260:18;;5253:62;5347:2;5332:18;;5174:182::o;6949:128::-;6989:3;7020:1;7016:6;7013:1;7010:13;7007:2;;;7026:18;;:::i;:::-;-1:-1:-1;7062:9:9;;6997:80::o;7082:274::-;7122:1;7148;7138:2;;7183:77;7180:1;7173:88;7284:4;7281:1;7274:15;7312:4;7309:1;7302:15;7138:2;-1:-1:-1;7341:9:9;;7128:228::o;7361:168::-;7401:7;7467:1;7463;7459:6;7455:14;7452:1;7449:21;7444:1;7437:9;7430:17;7426:45;7423:2;;;7474:18;;:::i;:::-;-1:-1:-1;7514:9:9;;7413:116::o;7534:125::-;7574:4;7602:1;7599;7596:8;7593:2;;;7607:18;;:::i;:::-;-1:-1:-1;7644:9:9;;7583:76::o;7664:437::-;7749:1;7739:12;;7796:1;7786:12;;;7807:2;;7861:4;7853:6;7849:17;7839:27;;7807:2;7914;7906:6;7903:14;7883:18;7880:38;7877:2;;;7951:77;7948:1;7941:88;8052:4;8049:1;8042:15;8080:4;8077:1;8070:15;7877:2;;7719:382;;;:::o;8106:184::-;8158:77;8155:1;8148:88;8255:4;8252:1;8245:15;8279:4;8276:1;8269:15",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.5;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/// @title Dream token for Dream Government\r\n/// @author Lars Raschke\r\n/// @notice This ERC20 token is collecting fees on simple transfers related to voted government laws.\r\n/// The fees are send to the tax pool.\r\ncontract DreamToken is ERC20, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    address public governmentAddress; // government contract address\r\n    address public taxPoolAddress; // tax pool address\r\n    uint8 public taxRate; // current tax rate for transfers\r\n\r\n    // modifier to restrict functions access only for government\r\n    modifier onlyGovernment() {\r\n        require(\r\n            msg.sender == governmentAddress,\r\n            \"Only government can call this function.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /// @notice Minting initial supply to senders address\r\n    /// @param initialSupply The number of initial supplied tokens\r\n    /// @param _govAddress The address of government contract\r\n    constructor(uint256 initialSupply, address _govAddress)\r\n        ERC20(\"DreamToken\", \"DRT\")\r\n    {\r\n        governmentAddress = _govAddress;\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    /// @notice Transfering tokens from sender to receiver and collecting taxes\r\n    /// @param amount The total number of tokens to be transfered\r\n    /// @param recipient The address of the token receiver\r\n    /// @return bool for successful transfer\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        (uint256 tax, uint256 _amount) = calculateSendingAmounts(amount);\r\n        _transfer(msg.sender, recipient, _amount);\r\n        _transfer(msg.sender, taxPoolAddress, tax);\r\n        return true;\r\n    }\r\n\r\n    /// @notice Calculating tax and remaining send amount for transfers\r\n    /// @param amount The total number of tokens to be transfered\r\n    /// @return tax amount and remaining sending amount\r\n    function calculateSendingAmounts(uint256 amount)\r\n        internal\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        uint256 tax = amount.mul(taxRate).div(10000);\r\n        uint256 amountAfterTax = amount.sub(tax);\r\n\r\n        return (tax, amountAfterTax);\r\n    }\r\n\r\n    /// @notice Setting the current tax fee by government.\r\n    /// @param _taxRate The tax rate applied to every transfer.\r\n    function setTaxRate(uint8 _taxRate) external onlyGovernment {\r\n        taxRate = _taxRate;\r\n    }\r\n\r\n    /// @notice Setting the tax pool address by government.\r\n    /// @param _taxPoolAddress The address of the tax pool.\r\n    function setTaxPoolAddress(address _taxPoolAddress) external onlyOwner {\r\n        taxPoolAddress = _taxPoolAddress;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\larsr\\Documents\\fh\\Bewerbung\\DreamGov\\contracts\\DreamToken.sol",
  "ast": {
    "absolutePath": "/C/Users/larsr/Documents/fh/Bewerbung/DreamGov/contracts/DreamToken.sol",
    "exportedSymbols": {
      "Context": [
        1527
      ],
      "DreamToken": [
        682
      ],
      "ERC20": [
        1401
      ],
      "IERC20": [
        1479
      ],
      "IERC20Metadata": [
        1504
      ],
      "Ownable": [
        894
      ],
      "SafeMath": [
        1839
      ]
    },
    "id": 683,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 535,
        "literals": [
          "solidity",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 536,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 683,
        "sourceUnit": 1402,
        "src": "59:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 537,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 683,
        "sourceUnit": 1840,
        "src": "116:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 538,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 683,
        "sourceUnit": 895,
        "src": "175:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 540,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1401,
              "src": "468:5:1"
            },
            "id": 541,
            "nodeType": "InheritanceSpecifier",
            "src": "468:5:1"
          },
          {
            "baseName": {
              "id": 542,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 894,
              "src": "475:7:1"
            },
            "id": 543,
            "nodeType": "InheritanceSpecifier",
            "src": "475:7:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 539,
          "nodeType": "StructuredDocumentation",
          "src": "231:214:1",
          "text": "@title Dream token for Dream Government\n @author Lars Raschke\n @notice This ERC20 token is collecting fees on simple transfers related to voted government laws.\n The fees are send to the tax pool."
        },
        "fullyImplemented": true,
        "id": 682,
        "linearizedBaseContracts": [
          682,
          894,
          1401,
          1504,
          1479,
          1527
        ],
        "name": "DreamToken",
        "nameLocation": "454:10:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 546,
            "libraryName": {
              "id": 544,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1839,
              "src": "496:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "490:27:1",
            "typeName": {
              "id": 545,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "509:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d570ab34",
            "id": 548,
            "mutability": "mutable",
            "name": "governmentAddress",
            "nameLocation": "540:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "525:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 547,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "525:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f985b3cf",
            "id": 550,
            "mutability": "mutable",
            "name": "taxPoolAddress",
            "nameLocation": "610:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "595:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 549,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "595:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "771a3a1d",
            "id": 552,
            "mutability": "mutable",
            "name": "taxRate",
            "nameLocation": "664:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "651:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 551,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "651:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "806:151:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 555,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "839:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "839:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 557,
                          "name": "governmentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "853:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "839:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920676f7665726e6d656e742063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "885:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_443fc3f7a485c900dc40ec61c2314e9fbdc931281d0c6ea7396e236a90ac7277",
                          "typeString": "literal_string \"Only government can call this function.\""
                        },
                        "value": "Only government can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_443fc3f7a485c900dc40ec61c2314e9fbdc931281d0c6ea7396e236a90ac7277",
                          "typeString": "literal_string \"Only government can call this function.\""
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "817:120:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "817:120:1"
                },
                {
                  "id": 562,
                  "nodeType": "PlaceholderStatement",
                  "src": "948:1:1"
                }
              ]
            },
            "id": 564,
            "name": "onlyGovernment",
            "nameLocation": "789:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:2:1"
            },
            "src": "780:177:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "1252:93:1",
              "statements": [
                {
                  "expression": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 576,
                      "name": "governmentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "1263:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 577,
                      "name": "_govAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 569,
                      "src": "1283:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1263:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1311:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1311:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 583,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "1323:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 580,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "1305:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:32:1"
                }
              ]
            },
            "documentation": {
              "id": 565,
              "nodeType": "StructuredDocumentation",
              "src": "965:184:1",
              "text": "@notice Minting initial supply to senders address\n @param initialSupply The number of initial supplied tokens\n @param _govAddress The address of government contract"
            },
            "id": 587,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "447265616d546f6b656e",
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1226:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c681f5d391156512af290fc2cb93c6c4821a613e3a4e2c29702e688af8f66609",
                      "typeString": "literal_string \"DreamToken\""
                    },
                    "value": "DreamToken"
                  },
                  {
                    "hexValue": "445254",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1240:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5c512cc32ad4c91c78dd2962fde781e945f243bea6adcb39dc4e1cc28a61fc40",
                      "typeString": "literal_string \"DRT\""
                    },
                    "value": "DRT"
                  }
                ],
                "id": 574,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 571,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1401,
                  "src": "1220:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1220:26:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "1175:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "1167:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "_govAddress",
                  "nameLocation": "1198:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "1190:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:44:1"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:0:1"
            },
            "scope": 682,
            "src": "1155:190:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1014
            ],
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1740:210:1",
              "statements": [
                {
                  "assignments": [
                    599,
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 599,
                      "mutability": "mutable",
                      "name": "tax",
                      "nameLocation": "1760:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 622,
                      "src": "1752:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 598,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1752:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "1773:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 622,
                      "src": "1765:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1765:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 603,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "1808:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 602,
                      "name": "calculateSendingAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "1784:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1751:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 607,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1836:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1836:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 609,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "1848:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 610,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1859:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 606,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "1826:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1826:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1888:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1888:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 616,
                        "name": "taxPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "1900:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 617,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1916:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 613,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "1878:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:42:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1938:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 597,
                  "id": 621,
                  "nodeType": "Return",
                  "src": "1931:11:1"
                }
              ]
            },
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "1353:248:1",
              "text": "@notice Transfering tokens from sender to receiver and collecting taxes\n @param amount The total number of tokens to be transfered\n @param recipient The address of the token receiver\n @return bool for successful transfer"
            },
            "functionSelector": "a9059cbb",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1616:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 594,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1702:8:1"
            },
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1633:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1625:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1652:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1644:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1624:35:1"
            },
            "returnParameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1729:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1728:6:1"
            },
            "scope": 682,
            "src": "1607:343:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "2277:155:1",
              "statements": [
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "tax",
                      "nameLocation": "2296:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "2288:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2288:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 642,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3130303030",
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2326:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 637,
                            "name": "taxRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 552,
                            "src": "2313:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 635,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "2302:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1733,
                          "src": "2302:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2302:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1748,
                      "src": "2302:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2288:44:1"
                },
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "mutability": "mutable",
                      "name": "amountAfterTax",
                      "nameLocation": "2351:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "2343:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2343:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 647,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "2379:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 645,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2368:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1718,
                      "src": "2368:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2368:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2343:40:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 650,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "2404:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 651,
                        "name": "amountAfterTax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "2409:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 652,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2403:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 653,
                  "nodeType": "Return",
                  "src": "2396:28:1"
                }
              ]
            },
            "documentation": {
              "id": 624,
              "nodeType": "StructuredDocumentation",
              "src": "1958:191:1",
              "text": "@notice Calculating tax and remaining send amount for transfers\n @param amount The total number of tokens to be transfered\n @return tax amount and remaining sending amount"
            },
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSendingAmounts",
            "nameLocation": "2164:23:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2196:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "2188:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2187:16:1"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "2254:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "2263:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:18:1"
            },
            "scope": 682,
            "src": "2155:277:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "2625:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 663,
                      "name": "taxRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "2636:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 664,
                      "name": "_taxRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "2646:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2636:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:18:1"
                }
              ]
            },
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "2440:119:1",
              "text": "@notice Setting the current tax fee by government.\n @param _taxRate The tax rate applied to every transfer."
            },
            "functionSelector": "6c791e04",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 661,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 660,
                  "name": "onlyGovernment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 564,
                  "src": "2610:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2610:14:1"
              }
            ],
            "name": "setTaxRate",
            "nameLocation": "2574:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "_taxRate",
                  "nameLocation": "2591:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "2585:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2585:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2584:16:1"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2625:0:1"
            },
            "scope": 682,
            "src": "2565:97:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "2863:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 676,
                      "name": "taxPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "2874:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 677,
                      "name": "_taxPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "2891:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2874:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:32:1"
                }
              ]
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "2670:116:1",
              "text": "@notice Setting the tax pool address by government.\n @param _taxPoolAddress The address of the tax pool."
            },
            "functionSelector": "32af04ff",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 674,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 673,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 843,
                  "src": "2853:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2853:9:1"
              }
            ],
            "name": "setTaxPoolAddress",
            "nameLocation": "2801:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "_taxPoolAddress",
                  "nameLocation": "2827:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "2819:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:25:1"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2863:0:1"
            },
            "scope": 682,
            "src": "2792:122:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 683,
        "src": "445:2472:1",
        "usedErrors": []
      }
    ],
    "src": "33:2886:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/larsr/Documents/fh/Bewerbung/DreamGov/contracts/DreamToken.sol",
    "exportedSymbols": {
      "Context": [
        1527
      ],
      "DreamToken": [
        682
      ],
      "ERC20": [
        1401
      ],
      "IERC20": [
        1479
      ],
      "IERC20Metadata": [
        1504
      ],
      "Ownable": [
        894
      ],
      "SafeMath": [
        1839
      ]
    },
    "id": 683,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 535,
        "literals": [
          "solidity",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 536,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 683,
        "sourceUnit": 1402,
        "src": "59:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 537,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 683,
        "sourceUnit": 1840,
        "src": "116:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 538,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 683,
        "sourceUnit": 895,
        "src": "175:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 540,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1401,
              "src": "468:5:1"
            },
            "id": 541,
            "nodeType": "InheritanceSpecifier",
            "src": "468:5:1"
          },
          {
            "baseName": {
              "id": 542,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 894,
              "src": "475:7:1"
            },
            "id": 543,
            "nodeType": "InheritanceSpecifier",
            "src": "475:7:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 539,
          "nodeType": "StructuredDocumentation",
          "src": "231:214:1",
          "text": "@title Dream token for Dream Government\n @author Lars Raschke\n @notice This ERC20 token is collecting fees on simple transfers related to voted government laws.\n The fees are send to the tax pool."
        },
        "fullyImplemented": true,
        "id": 682,
        "linearizedBaseContracts": [
          682,
          894,
          1401,
          1504,
          1479,
          1527
        ],
        "name": "DreamToken",
        "nameLocation": "454:10:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 546,
            "libraryName": {
              "id": 544,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1839,
              "src": "496:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "490:27:1",
            "typeName": {
              "id": 545,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "509:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d570ab34",
            "id": 548,
            "mutability": "mutable",
            "name": "governmentAddress",
            "nameLocation": "540:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "525:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 547,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "525:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f985b3cf",
            "id": 550,
            "mutability": "mutable",
            "name": "taxPoolAddress",
            "nameLocation": "610:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "595:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 549,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "595:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "771a3a1d",
            "id": 552,
            "mutability": "mutable",
            "name": "taxRate",
            "nameLocation": "664:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "651:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 551,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "651:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "806:151:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 555,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "839:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "839:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 557,
                          "name": "governmentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "853:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "839:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920676f7665726e6d656e742063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "885:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_443fc3f7a485c900dc40ec61c2314e9fbdc931281d0c6ea7396e236a90ac7277",
                          "typeString": "literal_string \"Only government can call this function.\""
                        },
                        "value": "Only government can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_443fc3f7a485c900dc40ec61c2314e9fbdc931281d0c6ea7396e236a90ac7277",
                          "typeString": "literal_string \"Only government can call this function.\""
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "817:120:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "817:120:1"
                },
                {
                  "id": 562,
                  "nodeType": "PlaceholderStatement",
                  "src": "948:1:1"
                }
              ]
            },
            "id": 564,
            "name": "onlyGovernment",
            "nameLocation": "789:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:2:1"
            },
            "src": "780:177:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "1252:93:1",
              "statements": [
                {
                  "expression": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 576,
                      "name": "governmentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "1263:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 577,
                      "name": "_govAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 569,
                      "src": "1283:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1263:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1311:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1311:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 583,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "1323:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 580,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "1305:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:32:1"
                }
              ]
            },
            "documentation": {
              "id": 565,
              "nodeType": "StructuredDocumentation",
              "src": "965:184:1",
              "text": "@notice Minting initial supply to senders address\n @param initialSupply The number of initial supplied tokens\n @param _govAddress The address of government contract"
            },
            "id": 587,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "447265616d546f6b656e",
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1226:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c681f5d391156512af290fc2cb93c6c4821a613e3a4e2c29702e688af8f66609",
                      "typeString": "literal_string \"DreamToken\""
                    },
                    "value": "DreamToken"
                  },
                  {
                    "hexValue": "445254",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1240:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5c512cc32ad4c91c78dd2962fde781e945f243bea6adcb39dc4e1cc28a61fc40",
                      "typeString": "literal_string \"DRT\""
                    },
                    "value": "DRT"
                  }
                ],
                "id": 574,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 571,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1401,
                  "src": "1220:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1220:26:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "1175:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "1167:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "_govAddress",
                  "nameLocation": "1198:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "1190:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:44:1"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:0:1"
            },
            "scope": 682,
            "src": "1155:190:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1014
            ],
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1740:210:1",
              "statements": [
                {
                  "assignments": [
                    599,
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 599,
                      "mutability": "mutable",
                      "name": "tax",
                      "nameLocation": "1760:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 622,
                      "src": "1752:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 598,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1752:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "1773:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 622,
                      "src": "1765:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1765:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 603,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "1808:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 602,
                      "name": "calculateSendingAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "1784:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1751:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 607,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1836:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1836:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 609,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "1848:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 610,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1859:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 606,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "1826:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1826:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1888:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1888:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 616,
                        "name": "taxPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "1900:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 617,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1916:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 613,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "1878:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:42:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1938:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 597,
                  "id": 621,
                  "nodeType": "Return",
                  "src": "1931:11:1"
                }
              ]
            },
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "1353:248:1",
              "text": "@notice Transfering tokens from sender to receiver and collecting taxes\n @param amount The total number of tokens to be transfered\n @param recipient The address of the token receiver\n @return bool for successful transfer"
            },
            "functionSelector": "a9059cbb",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1616:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 594,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1702:8:1"
            },
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1633:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1625:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1652:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1644:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1624:35:1"
            },
            "returnParameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "1729:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1728:6:1"
            },
            "scope": 682,
            "src": "1607:343:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "2277:155:1",
              "statements": [
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "tax",
                      "nameLocation": "2296:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "2288:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2288:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 642,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3130303030",
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2326:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 637,
                            "name": "taxRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 552,
                            "src": "2313:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 635,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "2302:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1733,
                          "src": "2302:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2302:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1748,
                      "src": "2302:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2288:44:1"
                },
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "mutability": "mutable",
                      "name": "amountAfterTax",
                      "nameLocation": "2351:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "2343:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2343:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 647,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "2379:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 645,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2368:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1718,
                      "src": "2368:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2368:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2343:40:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 650,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "2404:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 651,
                        "name": "amountAfterTax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "2409:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 652,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2403:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 653,
                  "nodeType": "Return",
                  "src": "2396:28:1"
                }
              ]
            },
            "documentation": {
              "id": 624,
              "nodeType": "StructuredDocumentation",
              "src": "1958:191:1",
              "text": "@notice Calculating tax and remaining send amount for transfers\n @param amount The total number of tokens to be transfered\n @return tax amount and remaining sending amount"
            },
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSendingAmounts",
            "nameLocation": "2164:23:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2196:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "2188:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2187:16:1"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "2254:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "2263:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:18:1"
            },
            "scope": 682,
            "src": "2155:277:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "2625:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 663,
                      "name": "taxRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "2636:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 664,
                      "name": "_taxRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "2646:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2636:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:18:1"
                }
              ]
            },
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "2440:119:1",
              "text": "@notice Setting the current tax fee by government.\n @param _taxRate The tax rate applied to every transfer."
            },
            "functionSelector": "6c791e04",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 661,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 660,
                  "name": "onlyGovernment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 564,
                  "src": "2610:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2610:14:1"
              }
            ],
            "name": "setTaxRate",
            "nameLocation": "2574:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "_taxRate",
                  "nameLocation": "2591:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "2585:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2585:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2584:16:1"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2625:0:1"
            },
            "scope": 682,
            "src": "2565:97:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "2863:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 676,
                      "name": "taxPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "2874:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 677,
                      "name": "_taxPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "2891:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2874:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:32:1"
                }
              ]
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "2670:116:1",
              "text": "@notice Setting the tax pool address by government.\n @param _taxPoolAddress The address of the tax pool."
            },
            "functionSelector": "32af04ff",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 674,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 673,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 843,
                  "src": "2853:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2853:9:1"
              }
            ],
            "name": "setTaxPoolAddress",
            "nameLocation": "2801:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "_taxPoolAddress",
                  "nameLocation": "2827:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "2819:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:25:1"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2863:0:1"
            },
            "scope": 682,
            "src": "2792:122:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 683,
        "src": "445:2472:1",
        "usedErrors": []
      }
    ],
    "src": "33:2886:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.5+commit.a4f2e591.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-14T16:44:13.979Z",
  "devdoc": {
    "author": "Lars Raschke",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "params": {
          "_govAddress": "The address of government contract",
          "initialSupply": "The number of initial supplied tokens"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setTaxPoolAddress(address)": {
        "params": {
          "_taxPoolAddress": "The address of the tax pool."
        }
      },
      "setTaxRate(uint8)": {
        "params": {
          "_taxRate": "The tax rate applied to every transfer."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "The total number of tokens to be transfered",
          "recipient": "The address of the token receiver"
        },
        "returns": {
          "_0": "bool for successful transfer"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Dream token for Dream Government",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Minting initial supply to senders address"
      },
      "setTaxPoolAddress(address)": {
        "notice": "Setting the tax pool address by government."
      },
      "setTaxRate(uint8)": {
        "notice": "Setting the current tax fee by government."
      },
      "transfer(address,uint256)": {
        "notice": "Transfering tokens from sender to receiver and collecting taxes"
      }
    },
    "notice": "This ERC20 token is collecting fees on simple transfers related to voted government laws. The fees are send to the tax pool.",
    "version": 1
  }
}